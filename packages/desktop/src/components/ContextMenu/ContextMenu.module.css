@define-mixin subFocus {
  opacity: 1;
  pointer-events: initial;
}

.main {
  position: fixed;
  opacity: 0;
  width: max-content;
  user-select: none;
  background-color: var(--publish-backdrop-color-default);
  box-sizing: border-box;
  box-shadow: var(--publish-color-contextmenu-border);
  border-radius: var(--mantine-radius-default);
  /* padding: rem(4px); */
  z-index: 999;
  &::before {
    content: '';
    border-radius: var(--mantine-radius-default);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    backdrop-filter: var(--publish-backdrop-filter);
  }

  --_contextmenu-animate-in-delay: 0ms;
  --_contextmenu-animate-out-delay: 0.2s;
}

.sub {
  composes: main;
  position: absolute;
  pointer-events: none;
  transition: opacity 0.256s;
  top: calc(-1 * rem(4px));
  left: 100%;
  backdrop-filter: var(--publish-backdrop-filter);
}

.subBottom {
  bottom: calc(-1 * rem(4));
  top: unset;
}

.subRight {
  right: 100%;
  top: unset;
}

.subFocusOpen {
  --_contextmenu-item-background-color: var(--_contextmenu-item-hover-color);

  /* & > :local(.item) {
    --_contextmenu-item-background-color: var(--_contextmenu-item-hover-color);
  } */

  & > :local(.sub) {
    @mixin subFocus;
  }
}

.itemFeedback {
  animation: feedback 0.12s both;
}

.item {
  cursor: var(--_contextmenu-item-cursor, pointer);
  width: 100%;
  position: relative;

  border-radius: var(--mantine-radius-default);
  color: var(--contextmenu-item-color, var(--mantine-color-text));
  font-size: var(--mantine-font-size-sm);
  padding: calc(var(--mantine-spacing-xs) / 1.8) var(--mantine-spacing-sm);
  background-color: var(--_contextmenu-item-background-color, transparent);
  display: flex;
  align-items: center;
  white-space: nowrap;
  opacity: var(--_contextmenu-item-opacity, 1);

  --_contextmenu-item-hover-color: var(
    --contextmenu-item-hover-color,
    var(--publish-color-contextmenu-hover)
  );

  & div {
    display: flex;
    align-items: center;
  }

  & :where([data-position='left']) {
    margin-inline-end: var(--mantine-spacing-xs);
  }

  & :where([data-position='right']) {
    margin-left: auto;
  }

  &:not([aria-disabled='true']):hover {
    --_contextmenu-item-background-color: var(--_contextmenu-item-hover-color);
  }

  &:not([aria-disabled='true']):focus {
    --_contextmenu-item-background-color: var(--_contextmenu-item-hover-color);
  }

  &[aria-disabled='true'] {
    pointer-events: none;
    --contextmenu-item-hover-color: var(--mantine-color-dimmed) !important;
    --_contextmenu-item-opacity: 0.6;
    --_contextmenu-item-cursor: default;
  }
}

.subItem {
  position: relative;

  &:not([aria-disabled='true']):hover > :local(.sub) {
    @mixin subFocus;
  }
}

.leaveDisabled {
  pointer-events: none;
}

.scrollbarThumb {
  background-color: var(--mantine-color-gray-2) !important;
  @mixin hover {
    background-color: var(--mantine-color-gray-3) !important;
  }
}

.scrollbar {
  @mixin hover {
    width: rem(7);
  }
}

@keyframes feedback {
  from {
    opacity: 0.4;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(10px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
}

.fadeIn {
  animation: fadeIn var(--_contextmenu-animate-in-delay) ease;
}
.fadeOut {
  animation: fadeOut var(--_contextmenu-animate-out-delay) ease;
}
.scaleIn {
  transform-origin: top left;
  animation: scaleIn var(--_contextmenu-animate-in-delay) ease;
}
.scaleOut {
  transform-origin: top left;
  animation: scaleOut var(--_contextmenu-animate-out-delay) ease;
}
